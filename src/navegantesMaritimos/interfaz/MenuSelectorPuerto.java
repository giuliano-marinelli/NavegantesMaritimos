package navegantesMaritimos.interfaz;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.border.*;
import lineales.lista.Lista;
import navegantesMaritimos.NavegantesMaritimos;
import navegantesMaritimos.interfaz.otros.*;

/**
 * Este menu permite seleccionar un puerto de la lista de puertos creados que
 * estan disponibles y retornarlo a su menu padre.
 */
public class MenuSelectorPuerto extends javax.swing.JFrame {

    private final NavegantesMaritimos nav;
    private final JFrame framePadre;
    private JLabel labelRespuesta;
    private String[] datosPuertoSelec;
    private JLabel labelPuertoSelec;

    public MenuSelectorPuerto(NavegantesMaritimos nav, JFrame framePadre, JLabel labelRespuesta) {
        this.nav = nav;
        this.framePadre = framePadre;
        this.labelRespuesta = labelRespuesta;
        initComponents();
        actualizarPanelPuertos();
        this.setLocationRelativeTo(null);
    }

    public void actualizarPanelPuertos() {
        panelPuertos.setPreferredSize(new Dimension(384, 64));
        panelPuertos.removeAll();
        Lista<String> puertos = nav.listarPuertos();
        if (puertos != null) {
            int fila = 0;
            int col = 0;
            for (int i = 1; i <= puertos.longitud(); i++) {
                String[] puerto = nav.arregloDatosPuerto(puertos.recuperar(i));
                agregarPuertoAPanel(puerto, col, fila);
                if (i % 6 == 0) {
                    fila++;
                    col -= 6;
                    double preferedWidth = panelPuertos.getPreferredSize().getWidth();
                    double preferedHeight = panelPuertos.getPreferredSize().getHeight();
                    panelPuertos.setPreferredSize(new Dimension((int) preferedWidth, (int) preferedHeight + 64));
                }
                col++;
            }
        }
        panelPuertos.repaint();
    }

    public void agregarPuertoAPanel(final String[] puerto, int col, int fila) {
        final JLabel labelPuerto = new JLabel();
        labelPuerto.setBounds(64 * col, 64 * fila, 64, 64);
        labelPuerto.setText(puerto[0]);
        labelPuerto.setToolTipText(
                "<html>"
                + "<p>" + puerto[0] + "</p>"
                + "<p>" + puerto[1] + "</p>"
                + "<p>" + puerto[2] + " darsenas</p>"
                + "</html>");
        labelPuerto.setIcon(new ImageIcon(getClass().getResource("../recursos/puertos/puerto.png")));
        JLabel labelPais = new JLabel();
        labelPais.setBounds((64 * col) + 34, (64 * fila) + 44, 30, 20);
        labelPais.setIcon(new ImageIcon(getClass().getResource("../recursos/banderas/" + Paises.conseguirAlias(puerto[1]) + ".png")));
        labelPuerto.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent evt) {
                if (labelPuertoSelec != null) {
                    labelPuertoSelec.setBorder(null);
                }
                labelPuertoSelec = labelPuerto;
                labelPuertoSelec.setBorder(LineBorder.createBlackLineBorder());
                datosPuertoSelec = puerto;
            }

            @Override
            public void mouseEntered(MouseEvent e) {
                if (labelPuertoSelec != labelPuerto) {
                    Border border = LineBorder.createGrayLineBorder();
                    labelPuerto.setBorder(border);
                }
            }

            @Override
            public void mouseExited(MouseEvent e) {
                if (labelPuertoSelec != labelPuerto) {
                    labelPuerto.setBorder(null);
                }
            }
        });
        panelPuertos.add(labelPais);
        panelPuertos.add(labelPuerto);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPuertos = new javax.swing.JScrollPane();
        panelPuertos = new javax.swing.JPanel();
        buttonAceptar = new javax.swing.JButton();
        buttonCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        scrollPuertos.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        scrollPuertos.setAutoscrolls(true);
        scrollPuertos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        scrollPuertos.setHorizontalScrollBar(null);

        panelPuertos.setBackground(new java.awt.Color(102, 102, 102));
        panelPuertos.setPreferredSize(new java.awt.Dimension(384, 64));

        javax.swing.GroupLayout panelPuertosLayout = new javax.swing.GroupLayout(panelPuertos);
        panelPuertos.setLayout(panelPuertosLayout);
        panelPuertosLayout.setHorizontalGroup(
            panelPuertosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 413, Short.MAX_VALUE)
        );
        panelPuertosLayout.setVerticalGroup(
            panelPuertosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 198, Short.MAX_VALUE)
        );

        scrollPuertos.setViewportView(panelPuertos);

        buttonAceptar.setText("Aceptar");
        buttonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAceptarActionPerformed(evt);
            }
        });

        buttonCancelar.setText("Cancelar");
        buttonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(scrollPuertos, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPuertos, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(buttonAceptar, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(buttonCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_buttonCancelarActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        framePadre.setEnabled(true);
        framePadre.setVisible(true);
        framePadre.toFront();
    }//GEN-LAST:event_formWindowClosed

    private void buttonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAceptarActionPerformed
        if (labelPuertoSelec != null) {
            labelRespuesta.setText(datosPuertoSelec[0]);
            labelRespuesta.setToolTipText(labelPuertoSelec.getToolTipText());
            labelRespuesta.setIcon(new ImageIcon(getClass().getResource("../recursos/puertos/puerto.png")));
            JLabel labelPais = new JLabel();
            labelPais.setBounds(34, 44, 30, 20);
            labelPais.setIcon(new ImageIcon(getClass().getResource("../recursos/banderas/" + Paises.conseguirAlias(datosPuertoSelec[1]) + ".png")));
            labelRespuesta.removeAll();
            labelRespuesta.add(labelPais);
            labelRespuesta.repaint();
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Debes seleccionar un puerto.", "Advertencia", 2);
        }
    }//GEN-LAST:event_buttonAceptarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuSelectorPuerto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuSelectorPuerto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuSelectorPuerto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuSelectorPuerto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuSelectorPuerto(null, null, null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAceptar;
    private javax.swing.JButton buttonCancelar;
    private javax.swing.JPanel panelPuertos;
    private javax.swing.JScrollPane scrollPuertos;
    // End of variables declaration//GEN-END:variables
}
