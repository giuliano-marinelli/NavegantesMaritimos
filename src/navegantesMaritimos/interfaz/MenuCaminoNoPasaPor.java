package navegantesMaritimos.interfaz;

import javax.swing.*;
import lineales.lista.Lista;
import navegantesMaritimos.NavegantesMaritimos;
import navegantesMaritimos.interfaz.validadores.Validador;

/**
 * Este menu permite realizar la opcion de obtener el camino entre dos puertos
 * que no pasa por un puerto indicado.
 */
public class MenuCaminoNoPasaPor extends javax.swing.JFrame {

    private final NavegantesMaritimos nav;
    private final JFrame framePadre;

    public MenuCaminoNoPasaPor(NavegantesMaritimos nav, JFrame framePadre) {
        this.nav = nav;
        this.framePadre = framePadre;
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelCaminoNoPasaPor = new javax.swing.JPanel();
        buttonListar = new javax.swing.JButton();
        buttonCerrar = new javax.swing.JButton();
        labelPuertoOrigen = new javax.swing.JLabel();
        labelPuertoDestino = new javax.swing.JLabel();
        labelSelecPuertoDestino = new javax.swing.JLabel();
        labelSelecPuertoOrigen = new javax.swing.JLabel();
        labelPuertoNoPasa = new javax.swing.JLabel();
        labelSelecPuertoNoPasa = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Camino entre dos puertos que no pasa por otro puerto");
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        panelCaminoNoPasaPor.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)), "Camino entre dos puertos que no pasa por otro puerto"));

        buttonListar.setText("Listar");
        buttonListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonListarActionPerformed(evt);
            }
        });

        buttonCerrar.setText("Cerrar");
        buttonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCerrarActionPerformed(evt);
            }
        });

        labelPuertoOrigen.setText("Puerto origen");

        labelPuertoDestino.setText("Puerto destino");

        labelSelecPuertoDestino.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        labelSelecPuertoDestino.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelSelecPuertoDestinoMouseClicked(evt);
            }
        });

        labelSelecPuertoOrigen.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        labelSelecPuertoOrigen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelSelecPuertoOrigenMouseClicked(evt);
            }
        });

        labelPuertoNoPasa.setText("No pasa por");

        labelSelecPuertoNoPasa.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        labelSelecPuertoNoPasa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelSelecPuertoNoPasaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelCaminoNoPasaPorLayout = new javax.swing.GroupLayout(panelCaminoNoPasaPor);
        panelCaminoNoPasaPor.setLayout(panelCaminoNoPasaPorLayout);
        panelCaminoNoPasaPorLayout.setHorizontalGroup(
            panelCaminoNoPasaPorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCaminoNoPasaPorLayout.createSequentialGroup()
                .addGroup(panelCaminoNoPasaPorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCaminoNoPasaPorLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelCaminoNoPasaPorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelPuertoOrigen)
                            .addComponent(labelSelecPuertoOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(52, 52, 52)
                        .addGroup(panelCaminoNoPasaPorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelSelecPuertoDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelPuertoDestino))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addGroup(panelCaminoNoPasaPorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelSelecPuertoNoPasa, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelPuertoNoPasa)))
                    .addGroup(panelCaminoNoPasaPorLayout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(buttonListar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelCaminoNoPasaPorLayout.setVerticalGroup(
            panelCaminoNoPasaPorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCaminoNoPasaPorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCaminoNoPasaPorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCaminoNoPasaPorLayout.createSequentialGroup()
                        .addGroup(panelCaminoNoPasaPorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelPuertoDestino)
                            .addComponent(labelPuertoOrigen))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelCaminoNoPasaPorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelSelecPuertoDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelSelecPuertoOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelCaminoNoPasaPorLayout.createSequentialGroup()
                        .addComponent(labelPuertoNoPasa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelSelecPuertoNoPasa, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(panelCaminoNoPasaPorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonListar)
                    .addComponent(buttonCerrar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelCaminoNoPasaPor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelCaminoNoPasaPor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonListarActionPerformed
        if (Validador.noVacio(labelSelecPuertoOrigen)
                && Validador.noVacio(labelSelecPuertoDestino)
                && Validador.noVacio(labelSelecPuertoNoPasa)) {
            String puertoOrigen = labelSelecPuertoOrigen.getText();
            String puertoDestino = labelSelecPuertoDestino.getText();
            String puertoNoPasa = labelSelecPuertoNoPasa.getText();
            Lista res = nav.caminoNoPasaPor(puertoOrigen, puertoDestino, puertoNoPasa);
            if (!res.esVacia()) {
                JOptionPane.showMessageDialog(this,
                        "El camino obtenido "
                        + "entre el puerto " + puertoOrigen
                        + " y el puerto " + puertoDestino
                        + " que no pasa por el puerto " + puertoNoPasa
                        + " es: \n" + res.toString() + ".", "Resultado", 1);
            } else {
                JOptionPane.showMessageDialog(this,
                        "No se ha encontrado un camino. Es posible que hallas "
                        + "elegido puertos iguales o que no exista un camino de "
                        + "rutas maritimas entre los puertos. Intentalo nuevamente.", "Error", 0);
            }
        }
    }//GEN-LAST:event_buttonListarActionPerformed

    private void buttonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_buttonCerrarActionPerformed

    private void labelSelecPuertoDestinoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelSelecPuertoDestinoMouseClicked
        this.setEnabled(false);
        this.setVisible(false);
        MenuSelectorPuerto menuAux = new MenuSelectorPuerto(nav, this, labelSelecPuertoDestino);
        menuAux.setVisible(true);
    }//GEN-LAST:event_labelSelecPuertoDestinoMouseClicked

    private void labelSelecPuertoOrigenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelSelecPuertoOrigenMouseClicked
        this.setEnabled(false);
        this.setVisible(false);
        MenuSelectorPuerto menuAux = new MenuSelectorPuerto(nav, this, labelSelecPuertoOrigen);
        menuAux.setVisible(true);
    }//GEN-LAST:event_labelSelecPuertoOrigenMouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        framePadre.setEnabled(true);
        framePadre.setVisible(true);
        framePadre.toFront();
    }//GEN-LAST:event_formWindowClosed

    private void labelSelecPuertoNoPasaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelSelecPuertoNoPasaMouseClicked
        this.setEnabled(false);
        this.setVisible(false);
        MenuSelectorPuerto menuAux = new MenuSelectorPuerto(nav, this, labelSelecPuertoNoPasa);
        menuAux.setVisible(true);
    }//GEN-LAST:event_labelSelecPuertoNoPasaMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuCaminoNoPasaPor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuCaminoNoPasaPor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuCaminoNoPasaPor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuCaminoNoPasaPor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuCaminoNoPasaPor(null, null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCerrar;
    private javax.swing.JButton buttonListar;
    private javax.swing.JLabel labelPuertoDestino;
    private javax.swing.JLabel labelPuertoNoPasa;
    private javax.swing.JLabel labelPuertoOrigen;
    private javax.swing.JLabel labelSelecPuertoDestino;
    private javax.swing.JLabel labelSelecPuertoNoPasa;
    private javax.swing.JLabel labelSelecPuertoOrigen;
    private javax.swing.JPanel panelCaminoNoPasaPor;
    // End of variables declaration//GEN-END:variables
}
